name: chocolatine

on:
  push:
    branches-ignore:
      - "ga-ignore-*"
  pull_request:
    branches-ignore:
      - "ga-ignore-*"

env:
  MIRROR_URL: git@github.com:EpitechPromo2028/B-DOP-200-LYN-2-1-chocolatine-ulysse.couchoud.git
  EXECUTABLES: "main"

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: codingstyle
        uses: actions/checkout@v4
        with:
          repository: ''
      - run: |
          check.sh "$(pwd)" "$(pwd)"
          CODING_STYLE_ERRORS=$(< "$(pwd)/coding-style-reports.log")
          IFS=$'\n'
          for ERRORS in $CODING_STYLE_ERRORS; do
              array=($(echo "$ERRORS" | sed 's/:/ /g'))
              echo "::error file=${array[1]#./},title=${array[3]#./} coding style errors detected: ${array[2]#./}::${array[4]#./}"
          done
          unset IFS
          if [[ -n $CODING_STYLE_ERRORS ]]; then
              exit 1
          else
              echo "0 coding style errors detected"
          fi

  check_program_compilation:
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    needs: check_coding_style
    steps:
      - name: "make"
        uses: actions/checkout@v4
        with:
          repository: ''
      - run: make
        timeout-minutes: 2
      - name: "clean"
        run: make clean
  
  run_tests:
    needs: check_program_compilation
    runs-on: ubuntu-latest
    name: "Running tests"
    container: epitechcontent/epitest-docker
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          repository: ''
      - name: run_tests
        timeout-minutes: 2
        run: make tests_run
          

  push_to_mirror:
    needs: run_tests
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: pushing
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
          target_repo_url: ${{ env.MIRROR_URL }}
